<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>HTML - Tag - Data Science Every Day</title>
        <link>https://MarkWentink.github.io/DSED/tags/html/</link>
        <description>HTML - Tag - Data Science Every Day</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 01 Dec 2019 21:57:40 &#43;0800</lastBuildDate><atom:link href="https://MarkWentink.github.io/DSED/tags/html/" rel="self" type="application/rss+xml" /><item>
    <title>Shortest path-finding with Dijkstra&#39;s algorithm</title>
    <link>https://MarkWentink.github.io/DSED/posts/dijkstra/</link>
    <pubDate>Sun, 01 Dec 2019 21:57:40 &#43;0800</pubDate>
    <author>MW</author>
    <guid>https://MarkWentink.github.io/DSED/posts/dijkstra/</guid>
    <description><![CDATA[In my previous post, I described how Dijkstra&rsquo;s algorithm allows us to make our way through mazes, maps, and other graphs, finding the shortest path between a start and end point.
Let&rsquo;s have a look here at what an implementation of that could look like. To illustrate, I will use a challenge from my favourite coding event, Advent of Code.
Advent of Code Every year, Advent of Code (AoC) publishes a coding challenge every day of December leading up to Christmas.]]></description>
</item>
</channel>
</rss>
